{
  "name": "clangformat",
  "displayName": "ClangFormat",
  "description": "Use ClangFormat in Visual Studio Code",
  "version": "2.0.1",
  "publisher": "seaube",
  "engines": {
    "vscode": "^1.55.0"
  },
  "galleryBanner": {
    "color": "#005577",
    "theme": "dark"
  },
  "dependencies": {
    "sax": "^1.2.4"
  },
  "categories": [
    "Formatters"
  ],
  "keywords": [
    "C#",
    "C++",
    "Clang",
    "CUDA",
    "JavaScript",
    "LLVM",
    "Objective-C",
    "Protobuf",
    "Format"
  ],
  "main": "./out/extension",
  "activationEvents": [
    "onLanguage:apex",
    "onLanguage:c",
    "onLanguage:cpp",
    "onLanguage:csharp",
    "onLanguage:cuda-cpp",
    "onLanguage:cuda",
    "onLanguage:glsl",
    "onLanguage:hlsl",
    "onLanguage:java",
    "onLanguage:javascript",
    "onLanguage:json",
    "onLanguage:objective-c",
    "onLanguage:objective-cpp",
    "onLanguage:proto",
    "onLanguage:proto3",
    "onLanguage:textproto",
    "onLanguage:typescript"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "ClangFormat",
      "properties": {
        "clangFormat.executable.default": {
          "type": "string",
          "default": "clang-format",
          "description": "clang-format executable path"
        },
        "clangFormat.executable.windows": {
          "type": "string",
          "default": "",
          "description": "clang-format executable path on Windows"
        },
        "clangFormat.executable.linux": {
          "type": "string",
          "default": "",
          "description": "clang-format executable path on Linux"
        },
        "clangFormat.executable.macos": {
          "type": "string",
          "default": "",
          "description": "clang-format executable path on macOS"
        },
        "clangFormat.style": {
          "type": "string",
          "default": "file",
          "description": "clang-format style.(-style=value, value can be file, LLVM, Google, Chromium, Mozilla, WebKit or json configure)"
        },
        "clangFormat.fallbackStyle": {
          "type": "string",
          "default": "LLVM",
          "description": "clang-format fallback style.(-fallback-style=value, value can be none, LLVM, Google, Chromium, Mozilla, WebKit)"
        },
        "clangFormat.assumeFilename": {
          "type": "string",
          "default": "",
          "description": "When reading from stdin, clang-format assumes this filename to look for a style config file (with -style=file) and to determine the language."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "package": "vsce package",
    "postversion": "vsce package && git push && cross-var git push origin v$npm_package_version && cross-var gh release create v$npm_package_version && cross-var gh release upload v$npm_package_version clangformat-$npm_package_version.vsix --clobber && cross-var vsce publish $npm_package_version"
  },
  "devDependencies": {
    "@types/node": "^16",
    "@types/sax": "^1.2.1",
    "@types/vscode": "^1.55.0",
    "cross-var": "^1.1.0",
    "tslint": "^6.1.3",
    "typescript": "^4.8.4",
    "vsce": "^2.13.0"
  },
  "icon": "icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/seaube/vscode-clang-format"
  },
  "license": "MIT"
}
